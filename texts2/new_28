Тестирование программ –это процессы исследования, а также испытания программных продуктов, имеющих следующие цели:
- демонстрация соответствия требованиям заказчика и разработчика;
- определить разные ситуации, поведение программы в которых будет неправильным или нежелательным, а также не соответствующим спецификации.
Современные методы и способы тестирования программных продуктов не дают возможности выявить в полной мере все имеющиеся дефекты и установить правильность и точность функционирования программы что анализируется. В связи с этим имеющиеся методы и способы тестирования действуют в мерах формального процесса исследования программ. 
Этот процесс проверки может доказать, что дефект отсутствует с точки зрения метода, что используется. Это значит, что нет никаких возможностей точно гарантировать, что в программном продукте отсутствуют дефекты.
Для решения задач тестирования, а также верификации программного обеспечения существует много подходов.
Составляющие ПО, что позволяют определить эго качество: 
- надёжность;
- сопровождаемость;
- практичность;
- эффективность;
- мобильность;
- функциональность.
Классифицировать виды тестирования принято за следующими признаками: 
По объектах тестирования:
- Тестирование производительности:
    - нагрузочное тестирование;
    - тестирование стабильности;
    - стресс-тестирование;
- Функциональное тестирование;
- Тестирование интерфейса пользователя;
- Юзабилити-тестирование;
- Конфигурационное тестирование;
- Тестирование безопасности;
- Тестирование совместимости;
- Тестирование локализации.
По знанию системы:
- Тестирование белого ящика;
- Тестирование серого ящика;
- Тестирование чёрного ящика.
По степени автоматизации:
- Автоматизированное тестирование;
- Полуавтоматизированное тестирование;
- Ручное тестирование.
По степени изолированности компонентов:
- Системное тестирование;
- Интеграционное тестирование;
- Модульное тестирование.
По времени проведения: 
- Альфа-тестирование;
•	Приёмочное тестирование
•	Регрессионное тестирование
•	Дымовое тестирование 
•	Подтверждающее тестирование
•	Тестирование новой функции 
- Бета-тестирование
По признаках позитивности сценариев:
- Негативное тестирование;
- Позитивное тестирование.
По степени подготовленности:
- Интуитивное тестирование; 
- Тестирование по документации (или формальное тестирование).
Рассмотрим такие уровни тестирования:
Системный уровень – тестируют интегрированную систему на её соответствие требованиям.[3]
Модульное тестирование – тестируют минимально возможные для тестирования компоненты (класс или функция). Очень часто такое тестирование осуществляется самими разработчиками программного продукта.
Интеграционный уровень – тестируют интерфейсы между разными компонентами, системами или подсистемами. 
Альфа-тестирование – это имитация работы системы штатным разработчиком, или работа с системой потенциальным пользователем или заказчиком. Альфа-тестирование чаще всего проводят на ранних стадиях разработки продуктов, но есть случаи, когда альфа-тестирование применяется для финишного продукта как внутренне приёмочное тестирование.
Бета-тестирование – в некоторых случаях выполняется распространение предварительной версии (в случае проприетарного программного обеспечения иногда с ограничениями по функциональности или времени работы) для некоторой большей группы лиц с тем, чтобы убедиться, что продукт содержит достаточно мало ошибок. Иногда бета-тестирование выполняется для того, чтобы получить обратную связь о продукте от его будущих пользователей. Зачастую для свободного, а также открытого программного продукта стадия альфа-тестирования характеризует так званное функциональное наполнение кода, а бета-тестирования характеризирует стадию исправления ошибок. Как правило, на каждом из этапов разработки промежуточный результат работы доступен конечному пользователю.
Динамическое и статическое тестирование. Статическое тестирование характеризируется анализом программ на основе исходных кодов, которые вычитываются вручную, или же анализируются специальными инструментами. Также, в некоторых ситуациях анализируют промежуточный, а не исходный код.
К статическому тестированию относят :
- тестирование требований;
- тестирование спецификаций;
- тестирование документации.
Регрессионное тестирование значит, что после внесения изменения в программу - тесты подтвердят, что сделанное изменение не повлияло на работоспособность и остальную функциональности приложения. Етот способ тестирования может выполняться как средствами автоматизации тестирования, так и вручную.
Тестовые сценарии используются на разных уровнях:
- в модульном тестировании;
- в интеграционном тестировании;
- в системном тестировании. 
 	Как правило, тестовые сценарии, пишутся для проверки тех компонентов, в которых очень высока вероятность появления отказа или же вовремя не найденные ошибки могут быть дорогостоящими.
В зависимости от того, есть ли доступ разработчиков тестов к исходному коду программы, что тестируется, разделяют «тестирование белого ящика» и «тестирование чёрного ящика». [1] 
Тестирование белого ящика характеризируется наличием доступа разработчиков теста к исходному коду программного обеспечения и возможностью писать код, который имеет связь с библиотеками тестируемого продукта. Это характерно для модульного тестирования, где тестируют только отдельную часть системы. Оно обеспечивает работоспособность и устойчивость компонентов конструкции до определённой степени. 
Тестирование чёрного ящика, характеризируется доступом к программе исключительно через тот же интерфейс, что и пользователь или заказчик, либо через внешние интерфейсы, которые позволяют другому компьютеру или другому процессу подключиться к системе тестирования. Тестирование чёрного ящика ведётся с использованием спецификации или иных документов, что описывают требования к системе. Обычно в данном виде тестирования критерий покрытия складывается из покрытия структуры входных данных, покрытия требований и покрытия модели (в тестировании на основе моделей).
Тестированию серого ящика характерно наличием имеет доступа разработчиков теста к исходному коду, но при непосредственном выполнении теста доступ к коду не требуется. 
